{
  "dashboardSections": [
    {
      "views": [
        {
          "name": "Syslog Events",
          "rows": [
            {
              "widgets": [
                {
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "Count of Events grouped by Message ID",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\") & text=~\"\\[(?<ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3tpfzwy33hl5wwk43tmftwklljmq000000>\\S+)]\" as item0 GROUP BY item0.ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3tpfzwy33hl5wwk43tmftwklljmq000000 ORDER BY COUNT(item0) DESC LIMIT 1,2000",
                  "info": "Displays count of Syslog events from Brocade Fibre Channel switches grouped by message ID. User can verify a particular event received from different sources.<br> <br>Following  Extracted Fields  can be used with syslog messages<br><br> <table> <tr><td>Extracted Fields</td><td> Description</td><td>Example Values</td></tr><tr><td>dcm_syslog_message-id</td><td>gives the syslog message id</td><td>e.g. FW-1435, MAPS-1003 etc.</td></tr> <tr><td>dcm_wwn_address</td><td>gives the WWN of the switch</td><td>switch WWN</td></tr> <tr><td>dcm_device_name</td><td>gives the switch name</td><td>switch name</td></tr> <tr><td>dcm_device_port</td><td>gives the switch port details</td><td>port number</td></tr> <tr><td>dcm_log_level</td><td>gives the syslog priority level</td><td>e.g. Info, Warning etc.</td></tr> </table>  "
                },                
				{
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "Count of Events over Time grouped by Priority",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\") as item0 GROUP BY item0.timestamp/86400000,item0.priority ORDER BY item0.priority DESC,item0.timestamp DESC LIMIT 1,2000",
                  "info": "Displays count of Syslog events from Brocade Fibre Channel switches over a period of time grouped by priority. So user can identify different priority events received in a particular time."
                }
              ]
            },
            { 
              "widgets": [
                {
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "Events by Priority",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0  & text:\"raslogd\") as item0 GROUP BY item0.priority ORDER BY COUNT(item0) DESC LIMIT 1,2000",
                  "info": "Displays all the Syslog events received from Brocade Fibre Channel switches grouped by priority i.e. shows the events grouped by priority like warning, info, error, emerg etc."
                },
                {
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "Events by Product",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\") as item0 GROUP BY item0.__li_source_path ORDER BY COUNT(item0) DESC LIMIT 1,2000",
                  "info": "Displays all Syslog events received from Brocade Fibre Channel switches grouped by product wise. User can view all the syslog messages received from a specify switch."
                }
              ]
            }
          ]
        },
        {
          "name": "Fabric Watch Events",
          "rows": [
            {
              "widgets": [
                {
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "Count of Fabric Watch Events grouped by Message ID",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0) & (text:\"raslogd\" & text:\"FW-*\")  & text=~\"\\[(?<ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3tpfzwy33hl5wwk43tmftwklljmq000000>\\S+)]\" as item0 GROUP BY item0.ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3tpfzwy33hl5wwk43tmftwklljmq000000 ORDER BY COUNT(item0) DESC LIMIT 1,2000",
				  "info": "Displays count of Fabric Watch events (starts with message id : FW-) from Brocade Fibre Channel switches grouped by Message ID. User can verify a particular Fabric Watch event received from different sources.<br><br>This query uses extracted field 'dcm_syslog_message-id', which retrieves the messages id from the Syslog events received from Brocade Fibre Channel switches"
                },
                {
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "Count of Fabric Watch Events over Time grouped by Priority",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0) & (text:\"raslogd\" & text:\"FW-*\") as item0 GROUP BY item0.timestamp/86400000,item0.priority ORDER BY item0.priority DESC,item0.timestamp DESC LIMIT 1,2000",
				  "info": "Displays count of Fabric Watch events (starts with message id : FW-) from Brocade Fibre Channel switches over a period grouped by priority (info, warning error etc.). So user can identify different priority events received in a particular time."
                }
              ]
            },
            {
              "widgets": [
                {
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "Fabric Watch Events by Priority",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0)  &  (text:\"raslogd\" & text:\"FW-*\") as item0 GROUP BY item0.priority ORDER BY COUNT(item0) DESC LIMIT 1,2000",
				  "info": "Displays all the Fabric Watch events (message id starts with : FW-) received from Brocade Fibre Channel switches grouped by priority i.e. shows the events grouped by priority like warning, info, error, emerg etc."				  
                },
                {
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "Fabric Watch Events by Product",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0) &  (text:\"raslogd\" & text:\"FW-*\") as item0 GROUP BY item0.__li_source_path ORDER BY COUNT(item0) DESC LIMIT 1,2000",
				  "info": "Displays all Fabric Watch events (Message ID starts with: FW-) received from Brocade Fibre Channel switches grouped by product wise. User can view all the syslog messages received from a specify switch."
                }
              ]
            }
          ]
        },
        {
          "name": "Audit Events",
          "rows": [
            {
              "widgets": [
                {
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "Audit Events over Time",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0)  & (text:\"raslogd\" & text:\"AUDIT\") as item0 GROUP BY item0.timestamp/0 ORDER BY item0.timestamp ASC LIMIT 1,2000",
                  "info": "Displays all audit events (syslog messages which have type as Audit) received from Brocade Fibre Channel switches over a period of time. <br><br>Following Extracted Fields can be used with Audit events <br> <br><table> <tr><td>Extracted Fields</td><td>Description</td><td>Example Values</td></tr> <tr><td>dcm_audit_module</td><td>gives the audit event generated module name </td><td>Security, Fabric etc.</td></tr> <tr><td>dcm_audit_priority</td><td>gives the priority  of the audit events </td><td>Info, Warning etc.</td></tr> <tr><td>dcm_audit_type</td><td>gives the type of the audit events </td><td>login, logout etc. </td></tr> <tr><td>dcm_audit_status</td><td>gives the status of the event </td><td>login failed or success etc.</td></tr> <tr><td>dcm_audit_info</td><td>gives information about the event</td><td>Failed login attempt via HTTP etc.</td></tr> <tr><td>dcm_audit_IPAddress</td><td>gives the source IP address </td><td>IP address</td></tr> </table> "
                },
                {
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "Audit Events by Product",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0) & (text:\"raslogd\" & text:\"AUDIT\") as item0 GROUP BY item0.__li_source_path ORDER BY item0.__li_source_path,COUNT(item0) DESC LIMIT 1,2000",
				  "info": "Displays all audit events (syslog messages which have type as Audit) received from Brocade Fibre Channel switches grouped by product wise. User can view all the syslog messages received from a specify switch."
                }
              ]
            },
            {
              "widgets": [
                {
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "Audit Events by Module",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0) & (text:\"raslogd\" & text:\"AUDIT\") & (text=~\"\\]\\, [A-Za-z]+\\, (?<ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3bovsgs5c7nvxwi5lmmu000000>\\w+)\\,\") as item0 GROUP BY item0.ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3bovsgs5c7nvxwi5lmmu000000 ORDER BY COUNT(item0) DESC LIMIT 1,2000",
				  "info": "Displays all audit events (syslog messages which have type as Audit) received from Brocade Fibre Channel switches grouped by module e.g. Security, Fabric etc."  
				  
                },
                {
                  "widgetType": "list",
                  "listType": "query",
                  "name": "Login queries",
                  "gridWidth": "1/2",
                  "listData": [
                    {
                      "messageQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0) & (text:\"raslogd\" & text:\"AUDIT\") & (text:\"SEC-3021\"| text:\"SEC-1193\" | text:\"SEC-1192\") as item0 GROUP BY item0.__li_source_path ORDER BY item0.__li_source_path,COUNT(item0) DESC",
                      "name": "Login Failures",
                      "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0) & (text:\"raslogd\" & text:\"AUDIT\") & (text:\"SEC-3021\" | text:\"SEC-1193\" | text:\"SEC-1192\") as item0 GROUP BY item0.__li_source_path ORDER BY item0.__li_source_path,COUNT(item0) DESC",
                      "info": "Displays all the failed login attempts received from Brocade Fibre Channel switches over a period of time"
                    },
                    {
                      "messageQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0) & (text:\"raslogd\" & text:\"AUDIT\") & (text:\"SEC-1203\" | text:\"SEC-3020\") as item0 GROUP BY item0.__li_source_path ORDER BY item0.__li_source_path,COUNT(item0) DESC",
                      "name": "Successful Logins",
                      "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0) & (text:\"raslogd\" & text:\"AUDIT\") & (text:\"SEC-1203\"| text:\"SEC-3020\") as item0 GROUP BY item0.__li_source_path ORDER BY item0.__li_source_path,COUNT(item0) DESC",
                      "info": "Displays all the successful login attempts received from Brocade Fibre Channel switches over a period of time"
                    }
                  ],
                  "info": "It has 2 queries related to login, one to view all the successful login attempt audit events and other one will displays the failure audit events"
                }
              ]
            }
          ]
        },
        {
          "name": "Switch Status Events",
          "rows": [
            {
              "widgets": [
                {
                  "widgetType": "chart",
                  "name": "Count of Events over Time",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0) &  (text:\"raslogd\") & (text:\"FW-1424\" | text:\"FW-1425\") as item0 GROUP BY item0.timestamp/86400000 ORDER BY item0.timestamp ASC",
                  "info": "Displays the count of switch status events (FW-1424 & Fw-1425) received from Brocade Fibre Channel switches over a period of time <br> Following Extracted field can be used with switch status events dcm_switch_status ---- gives the previous & current switch status --- e.g. Healthy to Down "
                },
                {
                  "widgetType": "chart",
                  "name": "Switch Status Events grouped by Priority",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0) &  (text:\"raslogd\") & (text:\"FW-1424\"  | text:\"FW-1425\" ) as item0 GROUP BY item0.priority ORDER BY COUNT(item0) DESC LIMIT 1,2000",
                  "info": "Displays all switch status events (Fw-1424 & FW-1425) received from Brocade Fibre Channel switches grouped by the event priority"
                }
              ]
            },
            {
              "widgets": [
                {
                  "widgetType": "chart",
                  "name": "Switch Status Events by Product",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0) &  (text:\"raslogd\") & (text:\"FW-1424\" | text:\"FW-1425\") as item0 GROUP BY item0.__li_source_path ORDER BY COUNT(item0) DESC LIMIT 1,2000",
                  "info": "All switch status events (FW-1424 & FW-1425) received from Brocade Fibre Channel switches grouped by product"
                }
              ]
            }
          ]
        },
        {
          "name": "Bottleneck Events",
          "rows": [
            {
              "widgets": [
                {
                  "widgetType": "chart",
                  "name": "Bottleneck Events over Time",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\")  &  (text:\"AN-1003\"  | text:\"AN-1004\" | text:\"AN-1007\" | text:\"AN-1008\" | text:\"AN-1010\" ) as item0 GROUP BY item0.timestamp/0 ORDER BY item0.timestamp ASC LIMIT 1,2000",
                  "info": "All bottleneck events (AN-1003, AN-1004, AN-1007, AN-1008 & AN-1010) received from Brocade Fibre Channel switches over a time.<br> <br>Following Extracted fields can be to find the bottleneck event type <br> <br> <table> <tr><td>Extracted Fields</td><td> Description</td><td>Example Values</td></tr><tr><td>dcm_bottleneck_type</td><td>gives the type of bottleneck event</td><td>e.g. Congestion  or Latency</td></tr></table>"								  
                },
                {
                  "widgetType": "chart",
                  "name": "Bottleneck Events by Product",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\") &    (text:\"AN-1003\"  | text:\"AN-1004\" | text:\"AN-1007\" | text:\"AN-1008\" | text:\"AN-1010\" ) as item0 GROUP BY item0.__li_source_path ORDER BY COUNT(item0) DESC LIMIT 1,2000",
                  "info": "All bottleneck events (AN-1003, AN-1004, AN-1007, AN-1008 & AN-1010) received from Brocade Fibre Channel switches grouped by product."
                }
              ]
            },
			{
				"widgets": [
                {
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "Count of events grouped by Bottleneck Type",                  
                  "chartQuery": "SELECT COUNT(item0) FROM timestamp >= 0 & timestamp <= 0 & text:\"raslogd\" & (text:\"AN-1003\" | text:\"AN-1004\" | text:\"AN-1007\" | text:\"AN-1008\" | text:\"AN-1010\") & text=~\"\\| FID \\d+, \\w+, \\w+,(?<ibadgns7miyggntfg5tdqljqgrrweljugvsdsllbge3tallfmiztkmbyha2tknbrmvsgg3k7mjxxi5dmmvxgky3ll52hs4df>.*) bottleneck on\" as item0 GROUP BY item0.ibadgns7miyggntfg5tdqljqgrrweljugvsdsllbge3tallfmiztkmbyha2tknbrmvsgg3k7mjxxi5dmmvxgky3ll52hs4df ORDER BY COUNT(item0) DESC LIMIT 1,100",
                  "info": "All bottleneck events (AN-1003, AN-1004, AN-1007, AN-1008 & AN-1010) received from Brocade Fibre Channel switches grouped by bottleneck type i.e. Congestion or Latency."
                }				
              ]
			 
            }
          ]
        },
        {
          "name": "MAPS Events",
          "rows": [
            {
              "widgets": [
                {
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "Count of MAPS violation Events over Time grouped by Category",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM timestamp >= 0 & timestamp <= 0 & text:\"raslogd\" & text:\"maps-*\" & text=~\"Category=(?<ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3nmfyhgx3dmf2gkz3poj4q0000>.*).\" as item0 GROUP BY item0.timestamp/43200000,item0.ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3nmfyhgx3dmf2gkz3poj4q0000 ORDER BY item0.ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3nmfyhgx3dmf2gkz3poj4q0000 DESC,item0.timestamp DESC LIMIT 1,2000",
                  "info": "Displays the MAPS violations (Message ID starts with MAPS-) received from Brocade Fibre Channel switches over a period of time grouped by the violation category i.e. switch resource, port health etc.<br><br>Following Extracted Fields can be used with MAPs events<br><br> <table> <tr><td>Extracted Fields</td><td> Description</td><td>Example Values</td></tr><tr><td>dcm_flow_currentValue</td><td>gives the current value of the violation count</td><td>numeric value</td></tr><tr><td>dcm_maps_category</td><td>gives the MAPS violation category</td><td>e.g. Traffic Performance, Port Health etc.</td></tr> <tr><td>dcm_maps_rulename</td><td>gives the MAPS violation rule name</td><td>String</td></tr> <tr><td>dcm_maps_rulecondition</td><td>gives the MAPs violation rule condition</td><td>e.g. ALL_PORTS(RX/min>=0)</td></tr> <tr><td>dcm_maps_object</td><td>gives the MAPs violation occurred object details</td><td>e.g. Switch, Chassis</td></tr> <tr><td>dcm_flash_usage</td><td>gives the flash usage details</td><td>numeric value</td></tr> <tr><td>dcm_maps_currentValue</td><td>gives the current value</td><td>SEC_HTTP,1 Violations</td></tr></table>"	
                },
                {
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "MAPS violation Events grouped by Priority",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0) &  (text:\"raslogd\" & text:\"maps-*\") as item0 GROUP BY item0.priority ORDER BY COUNT(item0) DESC LIMIT 1,2000",
                  "info": "Displays all the MAPS violations (Message ID starts with MAPS-) received from Brocade Fibre Channel switches group by the event priority i.e. warning, error etc."
                }
              ]
            },
            {
              "widgets": [
                {
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "MAPS violation Events by Product",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0) &  (text:\"raslogd\" & text:\"maps-*\") as item0 GROUP BY item0.__li_source_path ORDER BY COUNT(item0) DESC LIMIT 1,2000",
                  "info": "All MAPS violation events (Message ID starts with MAPS-) received from Brocade Fibre Channel switches grouped by product"
                },
                {
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "Count of MAPS Violation events by Category",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\") & ((text:\"MAPS-1001\") | (text:\"MAPS-1002\") | (text:\"MAPS-1003\")) & text=~\"Category=(?<ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3nmfyhgx3dmf2gkz3poj4q0000>.*).\" as item0 GROUP BY item0.ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3nmfyhgx3dmf2gkz3poj4q0000 ORDER BY COUNT(item0) DESC LIMIT 1,200",
                  "info": "Displays the count of MAPS violations received  (Message ID starts with MAPS-) from Brocade Fibre Channel switches and those will be grouped by violation Category i.e. Port health, switch resources etc."
                }
              ]
            },
            {
              "widgets": [
                {
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "Count of Flow Violation Events over Time grouped by Category",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\") & (text:\"MAPS-1001\" | text:\"MAPS-1002\" | text:\"MAPS-1003\") & (text:\"Current Value:[TX_FCNT\" | text:\"Current Value:[RX_FCNT\" | text:\"Current Value:[TX_THPUT\" |  text:\"Current Value:[RX_THPUT\" | text:\"Current Value:[IO_RD\" | text:\"Current Value:[IO_WR\" | text:\"Current Value:[IO_RD_BYTES\" |  text:\"Current Value:[IO_WR_BYTES\") & (text=~\"Current Value:\\[(?<ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3gnrxxox3dovzhezloorlgc3dvmu000000>\\S+),\") as item0 GROUP BY item0.timestamp/43200000,item0.ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3gnrxxox3dovzhezloorlgc3dvmu000000 ORDER BY item0.ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3gnrxxox3dovzhezloorlgc3dvmu000000 DESC,item0.timestamp DESC LIMIT 1,2000",
                  "info": "Displays the count of flows related violations (MAPS-1001, MAPS-1002 & MAPS-1003) received from Brocade Fibre Channel switches over a Time period grouped by Category i.e. Port health, switch resources etc."
                }
              ]
            }
          ]
        },
        {
          "name": "Callhome Events",
          "rows": [
            {
              "widgets": [
                {
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "Switch Call Home Events over Time grouped by Message ID",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\") & (text:\"MS-1009\" | text:\"FW-1402\" | text:\"FW-1426\"  | text:\"FW-1427\"  | text:\"FW-1428\"  | text:\"FW-1429\"  | text:\"FW-1430\"  | text:\"FW-1431\"  | text:\"FW-1432\" | text:\"FW-1433\" | text:\"FW-1434\" | text:\"FW-1435\" | text:\"FW-1436\" | text:\"FW-1437\"  | text:\"FW-1438\" | text:\"MAPS-1021\")  & (text=~\"\\[(?<ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3tpfzwy33hl5wwk43tmftwklljmqqcqmrj>\\S+)]\") as item0 GROUP BY item0.timestamp/43200000,item0.ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3tpfzwy33hl5wwk43tmftwklljmqqcqmrj ORDER BY item0.ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3tpfzwy33hl5wwk43tmftwklljmqqcqmrj DESC,item0.timestamp DESC LIMIT 1,2000",
                  "info": "All switch Call Home events MS-1009, FW-1402, FW-1426, FW-1427, FW-1428, FW-1429, FW-1430, FW-1431, FW-1432, FW-1433 FW-1434, FW-1435, FW-1436, FW-1437, FW-1438 & MAPS-1021 received from Brocade switches grouped by message ID over a period of time"
                },
                {
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "Switch Call Home Events by Product",
                  "gridWidth": "1/2",
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\") & (text:\"MS-1009\" | text:\"FW-1402\" | text:\"FW-1426\"  | text:\"FW-1427\"  | text:\"FW-1428\"  | text:\"FW-1429\"  | text:\"FW-1430\"  | text:\"FW-1431\"  | text:\"FW-1432\" | text:\"FW-1433\" | text:\"FW-1434\" | text:\"FW-1435\" | text:\"FW-1436\" | text:\"FW-1437\"  | text:\"FW-1438\" | text:\"MAPS-1021\") as item0 GROUP BY item0.__li_source_path ORDER BY COUNT(item0) DESC LIMIT 1,2000",
                  "info": "All switch Call Home events MS-1009, FW-1402, FW-1426, FW-1427, FW-1428, FW-1429, FW-1430, FW-1431, FW-1432, FW-1433 FW-1434, FW-1435, FW-1436, FW-1437, FW-1438 & MAPS-1021 received from Brocade Fibre Channel switches grouped by product"
                }
				]								
				},
				{
				"widgets": [
				{
                  "widgetType": "chart",
                  "messageQuery": "",
                  "name": "Switch Call Home Events by Product Priority",                  
                  "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\") & (text:\"MS-1009\" | text:\"FW-1402\" | text:\"FW-1426\"  | text:\"FW-1427\"  | text:\"FW-1428\"  | text:\"FW-1429\"  | text:\"FW-1430\"  | text:\"FW-1431\"  | text:\"FW-1432\" | text:\"FW-1433\" | text:\"FW-1434\" | text:\"FW-1435\" | text:\"FW-1436\" | text:\"FW-1437\"  | text:\"FW-1438\" | text:\"MAPS-1021\") as item0 GROUP BY item0.priority ORDER BY item0.priority DESC LIMIT 1,2000",
                  "info": "Displays Call Home events MS-1009, FW-1402, FW-1426, FW-1427, FW-1428, FW-1429, FW-1430, FW-1431, FW-1432, FW-1433 FW-1434, FW-1435, FW-1436, FW-1437, FW-1438 & MAPS-1021 received from Brocade Fibre Channel switches grouped by priority."
                }				
              ]
            }
          ]
        }
      ],
      "header": ""
    }
  ],
  "alerts": [
    {
      "searchPeriod": 600000,
      "hitCount": 0,
      "hitOperator": "GREATER_THAN",
      "messageQuery": "SELECT item0 FROM (timestamp >= 0 & timestamp <= 0) & (text:\"FW-1424\") as item0 ORDER BY item0.timestamp DESC",
      "searchInterval": 600000,
      "name": "Switch Status Degraded Alert",
      "alertType": "RATE_BASED",
      "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\") & (text:\"FW-1424\") as item0 GROUP BY item0.__li_source_path ORDER BY COUNT(item0) DESC LIMIT 1,100",
      "info": "Switch status degraded alert. This alert will be generated if switch status is degraded to marginal or down. This alert depends on FW-1424 syslog message to generate the alert. "
    },
    {
      "searchPeriod": 600000,
      "hitCount": 0,
      "hitOperator": "GREATER_THAN",
      "messageQuery": "SELECT item0 FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\") & (text:\"FFDC\") & (text:\"Detected termination\") as item0 ORDER BY item0.timestamp DESC",
      "searchInterval": 600000,
      "name": "Switch Panic or Crash Alert",
      "alertType": "RATE_BASED",
      "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\") & (text:\"FFDC\") & (text:\"Detected termination\") as item0 GROUP BY item0.__li_source_path ORDER BY COUNT(item0) DESC LIMIT 1,100",
      "info": "Switch panic or crash alert. This alert will be generated when a switch was panicked or crashed."
    },
    {
      "searchPeriod": 600000,
      "hitCount": 0,
      "hitOperator": "GREATER_THAN",
      "messageQuery": "SELECT item0 FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\") & ((text:\"MS-1009\") | (text:\"FW-1402\") | (text:\"FW-1426\") | (text:\"FW-1427\") | (text:\"FW-1428\") | (text:\"FW-1429\") | (text:\"FW-1430\") | (text:\"FW-1431\") | (text:\"FW-1432\") | (text:\"FW-1433\") | (text:\"FW-1434\") | (text:\"FW-1435\") | (text:\"FW-1436\") | (text:\"FW-1437\") | (text:\"FW-1438\") | (text:\"MAPS-1021\") ) as item0 ORDER BY item0.timestamp DESC",
      "searchInterval": 600000,
      "name": "Call Home Alert",
      "alertType": "RATE_BASED",
      "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\")  & ((text:\"MS-1009\") | (text:\"FW-1402\") | (text:\"FW-1426\") | (text:\"FW-1427\") | (text:\"FW-1428\") | (text:\"FW-1429\") | (text:\"FW-1430\") | (text:\"FW-1431\") | (text:\"FW-1432\") | (text:\"FW-1433\") | (text:\"FW-1434\") | (text:\"FW-1435\") | (text:\"FW-1436\") | (text:\"FW-1437\") | (text:\"FW-1438\") | (text:\"MAPS-1021\") )  as item0 GROUP BY item0.__li_source_path ORDER BY COUNT(item0) DESC LIMIT 1,100",
      "info": "Call Home alert. Callhome alert will be generated upon receiving any critical events from the switch i.e. MS-1009, FW-1402, FW-1426, FW-1427, FW-1428, FW-1429, FW-1430, FW-1431, FW-1432, FW-1433 FW-1434, FW-1435, FW-1436, FW-1437, FW-1438 & MAPS-1021."
    },
    {
      "searchPeriod": 600000,
      "hitCount": 0,
      "hitOperator": "GREATER_THAN",
      "messageQuery": "SELECT item0 FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\") & ((text:\"MAPS-1001\") | (text:\"MAPS-1002\") | (text:\"MAPS-1003\")) as item0 ORDER BY item0.timestamp DESC",
      "searchInterval": 600000,
      "name": "MAPS Violation Alert ",
      "alertType": "RATE_BASED",
      "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\") & ((text:\"MAPS-1001\") | (text:\"MAPS-1002\") | (text:\"MAPS-1003\")) as item0 GROUP BY item0.__li_source_path ORDER BY COUNT(item0) DESC LIMIT 1,100",
      "info": "MAPS violation alert. This alert will be generated If any MAPS rules are violated. This alert depends on MAPS-1001, MAPS-1002 & MAPS-1003 syslog events."
    },
    {
      "searchPeriod": 600000,
      "hitCount": 0,
      "hitOperator": "GREATER_THAN",
      "messageQuery": "SELECT item0 FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\") & (text:\"AN-1003\"  | text:\"AN-1004\" | text:\"AN-1007\" | text:\"AN-1008\" | text:\"AN-1010\" ) as item0 ORDER BY item0.timestamp DESC",
      "searchInterval": 600000,
      "name": "Bottleneck Alert",
      "alertType": "RATE_BASED",
      "chartQuery": "SELECT COUNT(item0) FROM (timestamp >= 0 & timestamp <= 0 & text:\"raslogd\") & (text:\"AN-1003\"  | text:\"AN-1004\" | text:\"AN-1007\" | text:\"AN-1008\" | text:\"AN-1010\" ) as item0 GROUP BY item0.__li_source_path ORDER BY item0.__li_source_path,COUNT(item0) DESC LIMIT 1,100",
      "info": "Bottleneck alert. This alert will be generated if any bottleneck events are generated i.e. AN-1003, AN-1004, AN-1007, AN-1008 &AN-1010."
    }
  ],
  "name": "Brocade - SAN",
  "queries": [],
  "extractedFields": [
    {
      "postContext": "\\,",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3bovsgs5c7nvxwi5lmmu000000",
      "preContext": "raslogd: AUDIT\\, [A-Z0-9\\:/\\-\\(\\)\\ ]+\\, \\[[a-zA-Z0-9\\-\\]]+\\, [a-zA-Z]+\\, ",
      "regexValue": "\\w+",
      "displayName": "dcm_audit_module"
    },
    {
      "postContext": "\\,",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3bovsgs5c7obzgs33snf2hs000",
      "preContext": "raslogd: AUDIT\\, [A-Z0-9\\:/\\-\\(\\)\\ ]+\\, \\[[a-zA-Z0-9\\-\\]]+\\, ",
      "regexValue": "\\w+",
      "displayName": "dcm_audit_priority"
    },
    {
      "postContext": "\\,",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3bovsgs5c7or4xazi0",
      "preContext": "(^raslogd:.*)(Event: )",
      "regexValue": "\\w+",
      "displayName": "dcm_audit_type"
    },
    {
      "postContext": "\\,",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3bovsgs5c7on2gc5dvom000000",
      "preContext": "(^raslogd:.*)(Status: )",
      "regexValue": "\\w+",
      "displayName": "dcm_audit_status"
    },
    {
      "postContext": " bottleneck on",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3cn52hi3dfnzswg227or4xazi0",
      "preContext": "(^raslogd:.*)(\\| FID \\d+, \\w+, \\w+,)",
      "regexValue": ".*",
      "displayName": "dcm_bottleneck_type"
    },
    {
      "postContext": "\\.",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3to5uxiy3il5zxiyluovzq0000",
      "preContext": "(^raslogd:.*)(, Switch status changed from )",
      "regexValue": ".*",
      "displayName": "dcm_switch_status"
    },
    {
      "postContext": "\\,",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3wmzpwsza0",
      "preContext": "(^raslogd:.*)(\\| FID )",
      "regexValue": "\\d+",
      "displayName": "dcm_vf_id"
    },
    {
      "postContext": "(\\,|\\].)",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3bovsgs5c7nfxgm3y0",
      "preContext": "(^raslogd:.*)(Info: )",
      "regexValue": ".*",
      "displayName": "dcm_audit_info"
    },
    {
      "postContext": "\\.",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3bovsgs5c7jfieczdeojsxg4y0",
      "preContext": "(^raslogd:.*)(IP Addr: )",
      "regexValue": ".*",
      "displayName": "dcm_audit_IPAddress"
    },
    {
      "postContext": ",",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3gnrxxox3dovzhezloorlgc3dvmu000000",
      "preContext": "(^raslogd:.*)(Current Value:\\[)",
      "regexValue": "\\S+",
      "displayName": "dcm_flow_currentValue"
    },
	{
      "postContext": "\\],",
      "internalName": "ibadgns7mm4tcobxgazweljyg4zwiljug4ygcllbgq2gilldmvstqn3gha4dinjzgvsgg3k7nvqxa427mn2xe4tfnz2hmylmovsq0000",
      "preContext": "(^raslogd:.*)(Current Value:\\[)",
      "regexValue": ".*",
      "displayName": "dcm_maps_currentValue"
    },
	
    {
      "postContext": "\\]\\,",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3tpfzwy33hl5wwk43tmftwklljmq000000",
      "preContext": "raslogd: [A-Z]*[\\,]?[A-Z0-9\\:/\\-\\(\\)\\ ]+\\, \\[",
      "regexValue": "[A-Z]+\\-\\d+",
      "displayName": "dcm_syslog_message-id"
    },
    {
      "postContext": " \\| FID",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3xo5xf6ylemrzgk43t",
      "preContext": "(^raslogd:.*)(WWN )",
      "regexValue": "([A-Fa-f0-9]{2}[:-]){7}([A-Fa-f0-9]{2})",
      "displayName": "dcm_wwn_address"
    },
    {
      "postContext": ", ",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3mn5tv63dfozswy000",
      "preContext": "(^raslogd:.*)(\\| FID \\d+, )",
      "regexValue": "\\S+",
      "displayName": "dcm_log_level"
    },
    {
      "postContext": ",",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3emv3gsy3fl5xgc3lf",
      "preContext": "(^raslogd:.*)(\\| FID \\d+, \\S+, )",
      "regexValue": "\\S+",
      "displayName": "dcm_device_name"
    },
    {
      "postContext": ", ",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3emv3gsy3fl5yg64tu",
      "preContext": "(^raslogd:.*)(\\| FID \\d+, \\S+, \\S+, Port )",
      "regexValue": "[^,]+",
      "displayName": "dcm_device_port"
    },
    {
      "postContext": ".",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3nmfyhgx3dmf2gkz3poj4q0000",
      "preContext": "(^raslogd:.*)(Category=)",
      "regexValue": ".*",
      "displayName": "dcm_maps_category"
    },
    {
      "postContext": "\\,",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3nmfyhgx3sovwgk3tbnvsq0000",
      "preContext": "(^raslogd:.*)(RuleName=)",
      "regexValue": "\\S+",
      "displayName": "dcm_maps_rulename"
    },
    {
      "postContext": "\\,",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3nmfyhgx3sovwgky3pnzsgs5djn5xa0000",
      "preContext": "(^raslogd:.*)(Condition=)",
      "regexValue": "\\S+",
      "displayName": "dcm_maps_rulecondition"
    },
    {
      "postContext": "\\,",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3nmfyhgx3pmjvgky3u",
      "preContext": "(^raslogd:.*)(Obj:\\w+ \\[)",
      "regexValue": ".*",
      "displayName": "dcm_maps_object"
    },
    {
      "postContext": " %\\]\\,",
      "internalName": "ibadcnk7mnxw2ltcojxwgylemuxgiy3nmrrw2x3gnrqxg2c7ovzwcz3f",
      "preContext": "(^raslogd:.*)(Current Value:\\[FLASH_USAGE\\,)",
      "regexValue": "-?\\d+",
      "displayName": "dcm_flash_usage"
    }
  ],
  "version": "1.0",
  "namespace": "com.brocade.dcm",
  "icon": "iVBORw0KGgoAAAANSUhEUgAAAJAAAACQCAIAAABoJHXvAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyJpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2LjE0NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNiAoV2luZG93cykiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MTlEMTIzQjk1MTZEMTFFM0I4RTI5QjlCNERCMDQzM0MiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6MTlEMTIzQkE1MTZEMTFFM0I4RTI5QjlCNERCMDQzM0MiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDoxOUQxMjNCNzUxNkQxMUUzQjhFMjlCOUI0REIwNDMzQyIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDoxOUQxMjNCODUxNkQxMUUzQjhFMjlCOUI0REIwNDMzQyIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PiaDNT0AABAdSURBVHja7F0LUFXF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",
  "author": "Brocade",
  "contentVersion": "1.0",
  "url": "www.brocade.com",
  "info": "Brocade SAN content pack helps the user to better search, analyze and manage the log data generated by &nbsp;Brocade SAN. Content pack can be used in two ways:<br>- Configure BNA to forward syslogs from all the switches of interest, to Log Insight<br>- Configure switches to forward syslog to Log Insight"
}
